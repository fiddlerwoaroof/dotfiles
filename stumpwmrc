(in-package :stumpwm)
(defvar *selection-search-map* nil "selection search map")
(defvar *search-map* nil "search map")

#+devtime
(progn
  (setf *window-format* "%s%m%n: %15t")
  (setf *window-format-by-class* "%m%n %c %s%92t"))

#-devtime
(eval-when (:load-toplevel :compile-toplevel :execute)
  (load-module "stumptray"))

(eval-when (:load-toplevel :compile-toplevel :execute)
  #-devtime
  (progn 
    (set-prefix-key (kbd "s-space"))
    (mode-line)
    (stumptray:stumptray)

    (fill-keymap *selection-search-map*
                 (kbd "g") "search-for-selection google"
                 (kbd "/") "search-for-selection google"
                 (kbd "s-/") "search-for-selection google" 
                 (kbd "l") "search-for-selection lisp")

    (fill-keymap *search-map*
                 (kbd "a") "do-search amazon"
                 (kbd "h") "do-search php"
                 (kbd "p") "do-search python"
                 (kbd "o") "do-search stack-overflow"
                 (kbd "y") "do-search youtube"
                 (kbd "l") "do-search lisp"
                 (kbd "w") "do-search wikipedia"
                 (kbd "d") "do-search duckduckgo"
                 (kbd "g") "do-search google"
                 (kbd "s") *selection-search-map*
                 (kbd "/") "do-search google"
                 (kbd "Return") "search-for-selection google"
                 (kbd "s-/") "do-search google")

    (define-key *top-map* (kbd "s-!") "run-yeganesh")
    (define-key *top-map* (kbd "s-/") *search-map*)
    (define-key *top-map* (kbd "s-TAB") "fnext")
    (define-key *top-map* (kbd "s-ISO_Left_Tab") "fother")

    (define-key *root-map* (kbd "\"") "windowlist-by-class")
    (define-key *root-map* (kbd "n") "next-in-frame")
    (define-key *root-map* (kbd "p") "prev-in-frame")) )

;;; vim: set ft=lisp:
